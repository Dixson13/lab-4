#include <iostream>                                 //заголовочный файл с классами, функциями и переменными для организации ввода-вывода в языке программирования C++.

using namespace std;                                //пространство стандартных имён.

#include "SinglyLinkedList.cpp"                     //класс с методами и переменными, который мы создали для работы с ними.
#include "SinglyLinkedList.h"

int main()
{
    setlocale(LC_ALL,"rus");                        //функция для использования русских букв.
    int Size, x, y;                                 //объявление переменных.
    int pos, el1;
    char el2;
    SinglyLinkedList <int> p1;                      //объявление объектов классов.
    SinglyLinkedList <char> p2;
    while (1)                                       //бесконечный цикл с предусловием.
    {
        cout << "Односвязный список.\n";
        cout << "Выберете один из 2 типов данных для заполнения списка:\n";
        cout << "1.Тип int.\n";
        cout << "2.Тип char.\n";
        cout << "Введите 0 для выхода из программы.\n";
        cin >> x;
        if (x==0)                                   //условие выхода из бесконечного цикла с предусловием.
        break;
        if (x>=0 && x<=2)
        {
            switch (x)                              //оператор выбора.
            {
                case (0):
                    break;
                case (1):
                    cout << "Введите максимальный размер списка.\n";
                    cin >> Size;
                    while (Size<1)
                    {
                        cout << "Введите максимальный размер списка корректно (больше 0).\n";
                        cin >> Size;
                    }
                    p1.setsize(Size);
                    while (1)
                    {
                        cout << "С помощью представленных методов заполняйте, редактируйте и узнавайте свойства списка.\n";
                        cout << "1.Использовать метод insertLast ---- вставка элемента в конец списка.\n";
                        cout << "2.Использовать метод insertFirst --- вставка элемента в начало списка.\n";
                        cout << "3.Использовать метод insertAtPos --- вставка элемента в указанную позицию.\n";
                        cout << "4.Использовать метод Delete -------- удаляет заданный элемент из списка.\n";
                        cout << "5.Использовать метод DeleteLast ---- удаляет последний элемент списка.\n";
                        cout << "6.Использовать метод DeleteFirst --- удаляет первый элемент списка.\n";
                        cout << "7.Использовать метод DeleteAtPos --- удаляет элемент из заданной позиции.\n";
                        cout << "8.Использовать метод clear --------- очистка.\n";
                        cout << "9.Использовать метод getLast ------- возвращает последний элемент списка.\n";
                        cout << "10.Использовать метод getFirst ----- возвращает первый элемент списка.\n";
                        cout << "11.Использовать метод isContains --- проверка наличия элемента.\n";
                        cout << "12.Использовать метод isEmpty ------ проверка наличия элементов.\n";
                        cout << "13.Использовать метод Size --------- размер списка.\n";
                        cout << "14.Вывести список на экран.\n";
                        cout << "Введите 0 для создания нового списка и смены типа данных.\n";
                        cin >> y;
                            if (y>=0 && y<=14)
                            {
                                switch (y)
                                {
                                    case (0):
                                        break;
                                    case (1):
                                        cout << "Введите элемент.\n";
                                        cin >> el1 ;
                                        p1.insertLast(el1);
                                        break;
                                    case (2):
                                        cout << "Введите элемент.\n";
                                        cin >> el1 ;
                                        p1.insertFirst(el1);
                                        break;
                                    case (3):
                                        cout << "Введите позицию и элемент.\n";
                                        cin >> pos >> el1;
                                        if (pos < 0)
                                        {
                                            cout << "Введена некорректная позиция." << endl;
                                            break;
                                        }
                                        p1.insertAtPos(pos,el1);
                                        break;
                                    case (4):
                                        cout << "Введите элемент, который требуется удалить.\n";
                                        cin >> el1;
                                        p1.Delete(el1);
                                        break;
                                    case (5):
                                        p1.DeleteLast();
                                        break;
                                    case (6):
                                        p1.DeleteFirst();
                                        break;
                                    case (7):
                                        cout << "Введите позицию, элемент в которой подлежит удалению.\n";
                                        cin >> pos;
                                        if (pos < 0)
                                        {
                                            cout << "Введена некорректная позиция." << endl;
                                            break;
                                        }
                                        p1.DeleteAtPos(pos);
                                        break;
                                    case (8):
                                        cout << "Список очищен.\n";
                                        p1.clear();
                                        break;
                                    case (9):
                                        cout << "Последний элемент списка: " << p1.getLast() << "." << endl;
                                        break;
                                    case (10):
                                        cout << "Первый элемент списка: " << p1.getFirst() << "." << endl;
                                        break;
                                    case (11):
                                        cout << "Введите позицию, которую следует проверить на наличие элемента.\n";
                                        cin >> pos;
                                        if (pos < 0)
                                        {
                                            cout << "Введена некорректная позиция." << endl;
                                            break;
                                        }
                                        p1.isContains(pos);
                                        break;
                                    case (12):
                                        p1.isEmpty();
                                        break;
                                    case (13):
                                        p1.Size();
                                        break;
                                    case (14):
                                        cout << "Список:\n";
                                        p1.print();
                                        break;
                                    default:                                //оператор default выполняется, если ни одно из значений case константное выражение не равно значению switch (выражение).
                                        break;                              //оператор break имеет два назначения: первое - это окончание работы оператора switch; второе - это принудительное окончание цикла.
                                    }
                                }
                                else
                                {
                                    cout << "Введите число от 0 до 14.\n";
                                }
                                cout << endl;
                                if (y==0)
                                    break;
                    }
                    break;
                case (2):
                    cout << "Введите максимальный размер списка.\n";
                    cin >> Size;
                    while (Size<1)
                    {
                        cout << "Введите максимальный размер списка корректно (больше 0).\n";
                        cin >> Size;
                    }
                    p2.setsize(Size);
                    while (1)
                    {
                        cout << "С помощью представленных методов заполняйте, редактируйте и узнавайте свойства списка.\n";
                        cout << "1.Использовать метод insertLast ---- вставка элемента в конец списка.\n";
                        cout << "2.Использовать метод insertFirst --- вставка элемента в начало списка.\n";
                        cout << "3.Использовать метод insertAtPos --- вставка элемента в указанную позицию.\n";
                        cout << "4.Использовать метод Delete -------- удаляет заданный элемент из списка.\n";
                        cout << "5.Использовать метод DeleteLast ---- удаляет последний элемент списка.\n";
                        cout << "6.Использовать метод DeleteFirst --- удаляет первый элемент списка.\n";
                        cout << "7.Использовать метод DeleteAtPos --- удаляет элемент из заданной позиции.\n";
                        cout << "8.Использовать метод clear --------- очистка.\n";
                        cout << "9.Использовать метод getLast ------- возвращает последний элемент списка.\n";
                        cout << "10.Использовать метод getFirst ----- возвращает первый элемент списка.\n";
                        cout << "11.Использовать метод isContains --- проверка наличия элемента.\n";
                        cout << "12.Использовать метод isEmpty ------ проверка наличия элементов.\n";
                        cout << "13.Использовать метод Size --------- размер списка.\n";
                        cout << "14.Вывести список на экран.\n";
                        cout << "Введите 0 для создания нового списка и смены типа данных.\n";
                        cin >> y;
                            if (y>=0 && y<=14)
                            {
                                switch (y)
                                {
                                    case (0):
                                        break;
                                    case (1):
                                        cout << "Введите элемент.\n";
                                        cin >> el2;
                                        p2.insertLast(el2);
                                        break;
                                    case (2):
                                        cout << "Введите элемент.\n";
                                        cin >> el2;
                                        p2.insertFirst(el2);
                                        break;
                                    case (3):
                                        cout << "Введите позицию и элемент.\n";
                                        cin >> pos >> el2;
                                        if (pos < 0)
                                        {
                                            cout << "Введена некорректная позиция." << endl;
                                            break;
                                        }
                                        p2.insertAtPos(pos,el2);
                                        break;
                                    case (4):
                                        cout << "Введите элемент, который требуется удалить.\n";
                                        cin >> el2;
                                        p2.Delete(el2);
                                        break;
                                    case (5):
                                        p2.DeleteLast();
                                        break;
                                    case (6):
                                        p2.DeleteFirst();
                                        break;
                                    case (7):
                                        cout << "Введите позицию, элемент в которой подлежит удалению.\n";
                                        cin >> pos;
                                        if (pos < 0)
                                        {
                                            cout << "Введена некорректная позиция." << endl;
                                            break;
                                        }
                                        p2.DeleteAtPos(pos);
                                        break;
                                    case (8):
                                        cout << "Список очищен.\n";
                                        p2.clear();
                                        break;
                                    case (9):
                                        cout << "Последний элемент списка: " << p2.getLast() << "." << endl;
                                        break;
                                    case (10):
                                        cout << "Первый элемент списка: " << p2.getFirst() << "." << endl;
                                        break;
                                    case (11):
                                        cout << "Введите позицию, которую следует проверить на наличие элемента.\n";
                                        cin >> pos;
                                        if (pos < 0)
                                        {
                                            cout << "Введена некорректная позиция." << endl;
                                            break;
                                        }
                                        p2.isContains(pos);
                                        break;
                                    case (12):
                                        p2.isEmpty();
                                        break;
                                    case (13):
                                        p2.Size();
                                        break;
                                    case (14):
                                        cout << "Список:\n";
                                        p2.print();
                                        break;
                                    default:
                                        break;
                                    }
                                }
                                else
                                {
                                    cout << "Введите число от 0 до 14.\n";
                                }
                                cout << endl;
                                if (y==0)
                                    break;
                    }
                    break;
            }
    }
    else
    {
        cout << "Введите число от 0 до 2.\n";
    }
    cout << endl;
    }
    return 0;                                               //оператор немедленного выхода из функции (т.е. возвращает 0).
}
